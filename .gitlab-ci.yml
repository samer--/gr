stages:
- build
- install
- package
- deploy

ubuntu-self-contained:
  stage: build
  image: ubuntu:16.04
  script:
  - apt-get update
  - apt-get install -y wget make gcc g++ libgl1-mesa-dev libglu1-mesa-dev xorg-dev git
  - make self GRDIR=/tmp/gr
  - mkdir artifacts
  - cp lib/gks/demo artifacts/gksdemo
  - cp lib/gr/demo artifacts/grdemo
  - cp lib/gks/libGKS.so lib/gks/libGKS.a lib/gks/plugin/*.so lib/gr/libGR.so lib/gr/libGR.a lib/gr3/libGR3.so artifacts/
  - cp -r lib/gks/fonts artifacts/
  - mkdir artifacts/include/
  - cp lib/gks/gks.h lib/gr/gr.h lib/gr3/gr3.h lib/gr/qtgr/grwidget.h artifacts/include/
  - mv artifacts artifacts-ubuntu1604
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-ubuntu1604/

ubuntu-system-dependencies:
  stage: build
  image: ubuntu:16.04
  script:
  - apt-get update
  - apt-get install -y wget make gcc g++ libx11-dev libxft-dev libxt-dev python2.7 texlive-latex3 dvipng libgl1-mesa-dev qt4-dev-tools pyqt4-dev-tools libgs-dev libgtk2.0-dev libwxgtk3.0-dev libglfw3-dev libzmq3-dev cmake git
  - make install GRDIR=/tmp/gr

debian-self-contained:
  stage: build
  image: debian:9
  script:
  - apt-get update
  - apt-get install -y wget make patch gcc g++ xz-utils lbzip2 libgl1-mesa-dev libglu1-mesa-dev xorg-dev git
  - make self GRDIR=/tmp/gr
  - mkdir artifacts
  - cp lib/gks/demo artifacts/gksdemo
  - cp lib/gr/demo artifacts/grdemo
  - cp lib/gks/libGKS.so lib/gks/libGKS.a lib/gks/plugin/*.so lib/gr/libGR.so lib/gr/libGR.a lib/gr3/libGR3.so artifacts/
  - cp -r lib/gks/fonts artifacts/
  - mkdir artifacts/include/
  - cp lib/gks/gks.h lib/gr/gr.h lib/gr3/gr3.h lib/gr/qtgr/grwidget.h artifacts/include/
  - mv artifacts artifacts-debian9
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-debian9/

debian-system-dependencies:
  stage: build
  image: debian:9
  script:
  - apt-get update
  - apt-get install -y wget make gcc g++ libx11-dev libxft-dev libxt-dev python2.7 texlive-latex3 dvipng libgl1-mesa-dev qt4-dev-tools pyqt4-dev-tools libgs-dev libgtk2.0-dev libwxgtk3.0-dev libglfw3-dev libzmq3-dev cmake git
  - make install GRDIR=/tmp/gr

centos7-self-contained:
  stage: build
  image: centos:7
  script:
  - yum update -y
  - yum groupinstall -y "Development Tools"
  - yum groupinstall -y "X Window System"
  - yum install -y which
  - yum install -y gcc gcc-c++ mesa-libGL-devel libXt-devel libX11-devel libXrender-devel libXrandr-devel libXinerama-devel libXcursor-devel libXi-devel
  - make self GRDIR=/tmp/gr
  - mkdir artifacts
  - cp lib/gks/demo artifacts/gksdemo
  - cp lib/gr/demo artifacts/grdemo
  - cp lib/gks/libGKS.so lib/gks/libGKS.a lib/gks/plugin/*.so lib/gr/libGR.so lib/gr/libGR.a lib/gr3/libGR3.so artifacts/
  - cp -r lib/gks/fonts artifacts/
  - mkdir artifacts/include/
  - cp lib/gks/gks.h lib/gr/gr.h lib/gr3/gr3.h lib/gr/qtgr/grwidget.h artifacts/include/
  - mv artifacts artifacts-centos7
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-centos7/

centos7-system-dependencies:
  stage: build
  image: centos:7
  script:
  - yum update -y
  - yum groupinstall -y "Development Tools"
  - yum groupinstall -y "X Window System"
  - yum install -y which
  - yum install -y gcc gcc-c++ cmake patch PyQt4-devel ghostscript-devel texlive-collection-latex texlive-dvipng cairo-devel git
  - make install GRDIR=/tmp/gr

centos6-self-contained:
  stage: build
  image: centos:6
  script:
  - yum update -y
  - yum groupinstall -y "Development Tools"
  - yum groupinstall -y "X Window System"
  - yum install -y which
  - yum install -y gcc gcc-c++ mesa-libGL-devel libXt-devel libX11-devel libXrender-devel libXrandr-devel libXinerama-devel libXcursor-devel libXi-devel git
  - make self GRDIR=/tmp/gr
  - mkdir artifacts
  - cp lib/gks/demo artifacts/gksdemo
  - cp lib/gr/demo artifacts/grdemo
  - cp lib/gks/libGKS.so lib/gks/libGKS.a lib/gks/plugin/*.so lib/gr/libGR.so lib/gr/libGR.a lib/gr3/libGR3.so artifacts/
  - cp -r lib/gks/fonts artifacts/
  - mkdir artifacts/include/
  - cp lib/gks/gks.h lib/gr/gr.h lib/gr3/gr3.h lib/gr/qtgr/grwidget.h artifacts/include/
  - mv artifacts artifacts-centos6
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-centos6/

centos6-system-dependencies:
  stage: build
  image: centos:7
  script:
  - yum update -y
  - yum groupinstall -y "Development Tools"
  - yum groupinstall -y "X Window System"
  - yum install -y which
  - yum install -y gcc gcc-c++ cmake patch PyQt4-devel ghostscript-devel texlive-collection-latex texlive-dvipng cairo-devel git
  - make install GRDIR=/tmp/gr

windows-32bit-cross:
  stage: build
  image: debian:8
  script:
  - apt-get update
  - apt-get install -y wget make mingw-w64 pkg-config xorg-dev g++ gcc cmake xz-utils lbzip2 patch git
  - PREFIX=i686-w64-mingw32 ARCHITECTURE=i686 OS=w64_x86-cross-mingw32 CC=i686-w64-mingw32-gcc CXX=i686-w64-mingw32-g++ AR=i686-w64-mingw32-ar RM="rm -f" MAKE="make -f makefile.mingw" make -f makefile.mingw self GRDIR=./
  - mkdir artifacts
  - cp lib/gks/demo.exe artifacts/gksdemo.exe
  - cp lib/gr/demo.exe artifacts/grdemo.exe
  - cp lib/gks/libgks.lib lib/gks/libgks.dll lib/gks/libgks.a lib/gks/plugin/*.dll lib/gks/plugin/*.a lib/gr/libgr.lib lib/gr/libgr.dll lib/gr/libgr.a lib/gr3/libGR3.dll lib/gr3/libGR3.a artifacts/
  - cp -r lib/gks/fonts artifacts/
  - cp /usr/lib/gcc/i686-w64-mingw32/4.9-win32/libgcc_s_sjlj-1.dll artifacts/
  - mkdir artifacts/include/
  - cp lib/gks/gks.h lib/gr/gr.h lib/gr3/gr3.h lib/gr/qtgr/grwidget.h artifacts/include/
  - mv artifacts artifacts-windows32
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-windows32/

windows-64bit-cross:
  stage: build
  image: debian:8
  script:
  - apt-get update
  - apt-get install -y wget make mingw-w64 pkg-config xorg-dev g++ gcc cmake xz-utils lbzip2 patch git
  - PREFIX=x86_64-w64-mingw32 ARCHITECTURE=x86_64 OS=w64_amd64-cross-mingw32 CC=x86_64-w64-mingw32-gcc CXX=x86_64-w64-mingw32-g++ AR=x86_64-w64-mingw32-ar RM="rm -f" MAKE="make -f makefile.mingw" make -f makefile.mingw self GRDIR=./
  - mkdir artifacts
  - cp lib/gks/demo.exe artifacts/gksdemo.exe
  - cp lib/gr/demo.exe artifacts/grdemo.exe
  - cp lib/gks/libgks.lib lib/gks/libgks.dll lib/gks/libgks.a lib/gks/plugin/*.dll lib/gks/plugin/*.a lib/gr/libgr.lib lib/gr/libgr.dll lib/gr/libgr.a lib/gr3/libGR3.dll lib/gr3/libGR3.a artifacts/
  - cp -r lib/gks/fonts artifacts/
  - cp /usr/lib/gcc/x86_64-w64-mingw32/4.9-win32/libgcc_s_seh-1.dll artifacts/
  - mkdir artifacts/include/
  - cp lib/gks/gks.h lib/gr/gr.h lib/gr3/gr3.h lib/gr/qtgr/grwidget.h artifacts/include/
  - mv artifacts artifacts-windows64
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-windows64/

darwin-self-contained:
  stage: build
  only:
    - branches@Scientific-IT-Systems/gr
    - tags@Scientific-IT-Systems/gr
  script:
  - rm -rf /tmp/gr
  - make self GRDIR=/tmp/gr
  - mkdir artifacts
  - cp lib/gks/demo artifacts/gksdemo
  - cp lib/gr/demo artifacts/grdemo
  - cp lib/gks/libGKS.so lib/gks/libGKS.a lib/gks/plugin/*.so lib/gr/libGR.so lib/gr/libGR.a lib/gr3/libGR3.so artifacts/
  - cp -r lib/gks/fonts artifacts/
  - mkdir artifacts/include/
  - cp lib/gks/gks.h lib/gr/gr.h lib/gr3/gr3.h lib/gr/qtgr/grwidget.h artifacts/include/
  - mkdir artifacts/Applications/
  - cp -r lib/gks/quartz/build/Release/GKSTerm.app artifacts/Applications/GKSTerm.app
  - mv artifacts artifacts-darwin
  tags:
  - macos
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-darwin/

packages-fpm:
  stage: build
  image: debian:8
  script:
  - apt-get update
  - apt-get install -y wget build-essential mesa-common-dev gfortran libqt4-dev qtdeclarative5-dev libgs-dev texlive-latex-base dvipng cmake patch python2.7 rpm ruby-dev xorg-dev git
  - gem install fpm
  - make "DISTROS=centos debian suse" linuxpackages
  - mkdir -p artifacts/linux/centos
  - cp packaging/centos/gr-*-1.x86_64.rpm artifacts/linux/centos/
  - mkdir -p artifacts/linux/debian
  - cp packaging/debian/gr_*_amd64.deb artifacts/linux/debian/
  - mkdir -p artifacts/linux/suse
  - cp packaging/suse/gr-*-1.x86_64.rpm artifacts/linux/suse/
  - mv artifacts artifacts-packages
  artifacts:
    expire_in: 1 week
    paths:
    - artifacts-packages/

packages-tar:
  stage: package
  image: ubuntu:16.04
  variables:
    GIT_STRATEGY: none
  script:
  - mkdir -p Windows-i686/gr
  - mv artifacts-windows32/*.dll Windows-i686/gr/
  - mv artifacts-windows32/fonts Windows-i686/gr/
  - mv artifacts-windows32/include Windows-i686/gr/
  - rm -rf artifacts-windows32
  - mkdir -p Windows-x86_64/gr
  - mv artifacts-windows64/*.dll Windows-x86_64/gr/
  - mv artifacts-windows64/fonts Windows-x86_64/gr/
  - mv artifacts-windows64/include Windows-x86_64/gr/
  - rm -rf artifacts-windows64
  - mkdir -p Debian-x86_64/gr/lib
  - mv artifacts-debian9/*.so Debian-x86_64/gr/lib/
  - mv artifacts-debian9/fonts Debian-x86_64/gr/
  - mv artifacts-debian9/include Debian-x86_64/gr/
  - rm -rf artifacts-debian9
  - mkdir -p Ubuntu-x86_64/gr/lib
  - mv artifacts-ubuntu1604/*.so Ubuntu-x86_64/gr/lib/
  - mv artifacts-ubuntu1604/fonts Ubuntu-x86_64/gr/
  - mv artifacts-ubuntu1604/include Ubuntu-x86_64/gr/
  - rm -rf artifacts-ubuntu1604
  - mkdir -p CentOS-x86_64/gr/lib
  - mv artifacts-centos7/*.so CentOS-x86_64/gr/lib/
  - mv artifacts-centos7/fonts CentOS-x86_64/gr/
  - mv artifacts-centos7/include CentOS-x86_64/gr/
  - rm -rf artifacts-centos7
  - mkdir -p Linux-x86_64/gr/lib
  - mv artifacts-centos6/*.so Linux-x86_64/gr/lib/
  - mv artifacts-centos6/fonts Linux-x86_64/gr/
  - mv artifacts-centos6/include Linux-x86_64/gr/
  - rm -rf artifacts-centos6
  - if [ -d artifacts-darwin ]; then
      mkdir -p Darwin-x86_64/gr/lib;
      mv artifacts-darwin/*.so Darwin-x86_64/gr/lib/;
      mv artifacts-darwin/fonts Darwin-x86_64/gr/;
      mv artifacts-darwin/include Darwin-x86_64/gr/;
      mv artifacts-darwin/Applications Darwin-x86_64/gr/;
      rm -rf artifacts-darwin;
      cd Darwin-x86_64 && tar czf gr.tar.gz gr && cd -;
    fi
  - cd Windows-i686 && tar czf gr.tar.gz gr && cd -
  - cd Windows-x86_64 && tar czf gr.tar.gz gr && cd -
  - cd Debian-x86_64 && tar czf gr.tar.gz gr && cd -
  - cd Ubuntu-x86_64 && tar czf gr.tar.gz gr && cd -
  - cd CentOS-x86_64 && tar czf gr.tar.gz gr && cd -
  - cd Linux-x86_64 && tar czf gr.tar.gz gr && cd -
  - mkdir Downloads
  - if echo "$CI_COMMIT_TAG" | grep -Eq '^v[0-9]+\.[0-9]+\.[0-9]+$'; then
      export VERSION=`echo "$CI_COMMIT_TAG" | sed 's/^v//'`;
      cp Windows-i686/gr.tar.gz Downloads/gr-$VERSION-Windows-i686.tar.gz;
      cp Windows-x86_64/gr.tar.gz Downloads/gr-$VERSION-Windows-x86_64.tar.gz;
      cp Debian-x86_64/gr.tar.gz Downloads/gr-$VERSION-Debian-x86_64.tar.gz;
      cp Ubuntu-x86_64/gr.tar.gz Downloads/gr-$VERSION-Ubuntu-x86_64.tar.gz;
      cp CentOS-x86_64/gr.tar.gz Downloads/gr-$VERSION-CentOS-x86_64.tar.gz;
      cp Linux-x86_64/gr.tar.gz Downloads/gr-$VERSION-Linux-x86_64.tar.gz;
      if [ -d Darwin-x86_64 ]; then
        cp Darwin-x86_64/gr.tar.gz Downloads/gr-$VERSION-Darwin-x86_64.tar.gz;
      fi;
      cd Downloads && sha512sum -b gr-*.tar.gz > gr-$VERSION.sha512.txt && cd -;
    else
      cp Windows-i686/gr.tar.gz Downloads/gr-$CI_COMMIT_SHA-Windows-i686.tar.gz;
      cp Windows-x86_64/gr.tar.gz Downloads/gr-$CI_COMMIT_SHA-Windows-x86_64.tar.gz;
      cp Debian-x86_64/gr.tar.gz Downloads/gr-$CI_COMMIT_SHA-Debian-x86_64.tar.gz;
      cp Ubuntu-x86_64/gr.tar.gz Downloads/gr-$CI_COMMIT_SHA-Ubuntu-x86_64.tar.gz;
      cp CentOS-x86_64/gr.tar.gz Downloads/gr-$CI_COMMIT_SHA-CentOS-x86_64.tar.gz;
      cp Linux-x86_64/gr.tar.gz Downloads/gr-$CI_COMMIT_SHA-Linux-x86_64.tar.gz;
      if [ -d Darwin-x86_64 ]; then
        cp Darwin-x86_64/gr.tar.gz Downloads/gr-$CI_COMMIT_SHA-Darwin-x86_64.tar.gz;
      fi;
      cd Downloads && sha512sum -b gr-*.tar.gz > gr-$CI_COMMIT_SHA.sha512.txt && cd -;
    fi
  artifacts:
    expire_in: 1 week
    paths:
    - Downloads/

deploy:
  stage: deploy
  image: ubuntu:16.04
  variables:
    GIT_STRATEGY: none
  only:
    - master@Scientific-IT-Systems/gr
    - tags@Scientific-IT-Systems/gr
  script:
  - apt-get update
  - apt-get install -y sshpass rsync
  - set +x
  - sshpass -p $RSYNC_PASSWORD rsync -av ./Downloads/ rsync://$RSYNC_USERNAME@ifffs.iff.kfa-juelich.de/gr/

debian9-install:
  stage: install
  image: debian:9
  script:
  - apt-get -q update
  - apt-get -q install -y gdebi-core gcc
  # Install gr DEB
  - gdebi -n artifacts-packages/linux/debian/gr*.deb
  - "echo -e '#include <gr.h>\n#include <stdio.h>\nint main(void) { printf(\"gr version: %s\\\\n\", gr_version()); return 0; }' > test.c"
  - gcc -o test test.c -lGR
  - ./test
    
ubuntu16.04-install:
  stage: install
  image: ubuntu:16.04
  script:
  - apt-get -q update
  - apt-get -q install -y gdebi-core gcc
  # Install gr DEB
  - gdebi -n artifacts-packages/linux/debian/gr*.deb
  - "echo -e '#include <gr.h>\n#include <stdio.h>\nint main(void) { printf(\"gr version: %s\\\\n\", gr_version()); return 0; }' > test.c"
  - gcc -o test test.c -lGR
  - ./test

ubuntu17.10-install:
  stage: install
  image: ubuntu:17.10
  script:
  - apt-get -q update
  - apt-get -q install -y gdebi-core gcc
  # Install gr DEB
  - gdebi -n artifacts-packages/linux/debian/gr*.deb
  - "echo -e '#include <gr.h>\n#include <stdio.h>\nint main(void) { printf(\"gr version: %s\\\\n\", gr_version()); return 0; }' > test.c"
  - gcc -o test test.c -lGR
  - ./test

centos7-install:
  stage: install
  image: centos:7
  script:
  - yum install -y epel-release gcc
  # Install gr RPM
  - yum localinstall -y artifacts-packages/linux/centos/gr*.rpm
  - "echo -e '#include <gr.h>\n#include <stdio.h>\nint main(void) { printf(\"gr version: %s\\\\n\", gr_version()); return 0; }' > test.c"
  - gcc -o test test.c -lGR
  - ./test

opensuse42.2-install:
  stage: install
  image: opensuse:42.2
  script:
  # Install gr RPM
  - echo 'gpgcheck = off' >> /etc/zypp/zypp.conf
  - zypper install -y artifacts-packages/linux/suse/gr*.rpm gcc
  - "echo -e '#include <gr.h>\n#include <stdio.h>\nint main(void) { printf(\"gr version: %s\\\\n\", gr_version()); return 0; }' > test.c"
  - gcc -o test test.c -lGR
  - ./test
    
opensuse42.3-install:
  stage: install
  image: opensuse:42.3
  script:
  # Install gr RPM
  - echo 'gpgcheck = off' >> /etc/zypp/zypp.conf
  - zypper install -y artifacts-packages/linux/suse/gr*.rpm gcc
  - "echo -e '#include <gr.h>\n#include <stdio.h>\nint main(void) { printf(\"gr version: %s\\\\n\", gr_version()); return 0; }' > test.c"
  - gcc -o test test.c -lGR
  - ./test
